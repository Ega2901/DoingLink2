import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from config_reader import config
from handlers import click, myid, rcpoll
from scheldule.scheldule import  send_schedule
from aiogram.methods.send_message import SendMessage
from aiogram.types import Message, ReplyKeyboardRemove, Poll, PollAnswer
from datetime import datetime
import aioschedule
from tzlocal import get_localzone
import sys
from apscheduler.schedulers.asyncio import AsyncIOScheduler
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(filename)s:%(lineno)d #%(levelname)-8s '
                    '[%(asctime)s] - %(name)s - %(message)s'
                    )


async def main():
    bot = Bot(token=config.bot_token.get_secret_value())
    dp = Dispatcher()

    async def schedule_daily_broadcast(bot_instance):
        subscribers = [921953226, -1001965799227]
        for subscriber in subscribers:
            await bot_instance.send_message(subscriber, send_schedule())

    current_time = datetime.now(get_localzone())

    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
    scheduler.add_job(schedule_daily_broadcast, trigger='cron', hour=12, minute=0, start_date=current_time, args=[bot])

    async def start_poll():
        markup = types.ReplyKeyboardRemove()
        poll_text = "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç‚úåüèª, –≤ —ç—Ñ–∏—Ä–µ –Ω–∞—à–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –Ω–∞—Ä–∞–±–æ—Ç–∫–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞!ü•≥ –ü—Ä–∏–º–µ—à—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ –∂–∏–∑–Ω–∏? ‚ò∫Ô∏èüéâ"
        options = ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç, –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑"]
        await bot.send_poll(
            chat_id=921953226,
            question=poll_text,
            options=options,
            is_anonymous=False,  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø—Ä–æ—Å –∫–∞–∫ –Ω–µ–∞–Ω–æ–Ω–∏–º–Ω—ã–π
            reply_markup=markup
        )
    async def poll_answer_handler(poll_answer: PollAnswer):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø—Ä–æ—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–º—É –æ–∂–∏–¥–∞–Ω–∏—é
        if poll_answer.poll.question == "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç‚úåüèª, –≤ —ç—Ñ–∏—Ä–µ –Ω–∞—à–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –Ω–∞—Ä–∞–±–æ—Ç–∫–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞!ü•≥ –ü—Ä–∏–º–µ—à—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ –∂–∏–∑–Ω–∏? ‚ò∫Ô∏èüéâ(–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ /pairs)":
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö –≤ –æ–ø—Ä–æ—Å–µ
            user_ids = [user.user.id for user in poll_answer.user]
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print("User IDs who voted in the poll:", user_ids)

    scheduler.add_job(start_poll, trigger='cron', hour=17, minute=27, start_date=current_time)
    scheduler.start()
    dp.include_routers(click.router, myid.myid_router, rcpoll.rf_router)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


